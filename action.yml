name: 'esp-build-action'
description: 'Builds an eep file, this can be used with the ESPEASYFLASHER_2.0'
inputs:
  sketch-name: # name of main ino file
    description: 'Name of the main ino file'
    required: true
  sketch-path: # path to sketch
    description: 'Path to sketch'
    required: false
    default: '.'
  eep-name: # name of eep file
    description: 'Name of the eep file'
    required: false
    default: ''
  core: # core esp8266 or esp32
    description: 'Core to use'
    required: true
    default: 'esp8266'
  board: # board to use
    description: 'Board to use'
    required: true
    default: 'd1_mini'
  core-version: # core version
    description: 'Core version of esp core e.g. 2.7.4'
    required: false
    default: ''
  libs: # libraries to include
    description: 'Libraries: comma separated Lib names e.g. U8g2,RTClib'
    required: false
    default: ''
  cpu-frequency: # cpu frequency
    description: 'CPU frequency: e.g. 80, 160 or 240'
    required: false
    default: '160'
runs:
  using: 'composite'
  steps:
    - name: Set GitHub Path
      run: echo "$GITHUB_ACTION_PATH" >> $GITHUB_PATH
      shell: bash
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}
    - name: Run build_sketch.sh
      run: start_action.sh
      shell: bash
      env:
        INPUT_SKETCH_NAME: ${{ inputs.sketch-name }}
        INPUT_SKETCH_PATH: ${{ inputs.sketch-path }}
        INPUT_CORE: ${{ inputs.core }}
        INPUT_BOARD: ${{ inputs.board }}
        INPUT_CORE_VERSION: ${{ inputs.core-version }}
        INPUT_LIBS: ${{ inputs.libs }}
        INPUT_CPU_F: ${{ inputs.cpu-frequency }}
    - name: Create build info
      shell: bash
      # GITHUB_REF_NAME: in case of a tag, this will be the tag name, otherwise it will be the branch name
      run: |
        cd ${{ inputs.sketch-path }}
        create_build_info.sh -s $GITHUB_SHA -r $GITHUB_REPOSITORY -n $GITHUB_REF_NAME
    - name: Create eep package
      shell: bash
      run: |
        cd ${{ inputs.sketch-path }}
        EEP_NAME="$( if [ -z ${{ inputs.eep-name }} ]; then echo ${{ inputs.sketch-name }}; else echo ${{ inputs.eep-name }}; fi )"
        create_eep_package.sh -s $EEP_NAME -c ${{ inputs.core }} -b ${{ inputs.board }}
    - uses: actions/upload-artifact@v4
      with:
        name: ${{inputs.core}}_${{inputs.board}}_${{inputs.sketch-name}}
        path: ${{ inputs.sketch-path }}/EEP/*
    